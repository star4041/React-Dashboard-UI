{"ast":null,"code":"var _jsxFileName = \"D:\\\\kloudone training\\\\React UI Task\\\\src\\\\components\\\\dashboard.js\";\nimport React from \"react\";\nimport Chart from \"react-google-charts\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dash-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dash-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piech\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dash-card-1\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Email statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"text-muted\",\n              children: \"Last Campaign Performance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"chart-padding\",\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                width: \"500px\",\n                height: \"250px\",\n                chartType: \"PieChart\",\n                loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Loading Chart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 27\n                }, this),\n                data: [[\"Task\", \"Hours per Day\"], [\"Open\", 3], [\"Bounce\", 1.5], [\"Unsubscribe\", 3]],\n                options: {\n                  allowHtml: \"true\",\n                  title: \"\",\n\n                  /*width: \"100%\",\r\n                  height: \"100%\",*/\n                  padding: \"0px\",\n                  margin: \"0px\"\n                },\n                rootProps: {\n                  \"data-testid\": \"1\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n                style: {\n                  marginRight: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), \"Campaign sent 2 days ago\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"linegph\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"User Behaviour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"text-muted\",\n              children: \"24 Hours Performance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              width: \"600px\",\n              height: \"280px\",\n              chartType: \"LineChart\",\n              loader: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this),\n              data: [[\"Time\", \"Open\", \"Click\", 'Click Second Time'], [0, 0, 0, 0], [1, 100, 180, 130], [2, 200, 150, 195], [3, 170, 300, 200], [4, 180, 150, 130], [5, 280, 323, 350], [6, 110, 301, 275], [7, 270, 190, 230]],\n              options: {\n                hAxis: {\n                  title: \"\"\n                },\n                vAxis: {\n                  title: \"\"\n                },\n                series: {\n                  0: {\n                    curveType: \"function\"\n                  },\n                  1: {\n                    curveType: \"function\"\n                  },\n                  2: {\n                    curveType: \"function\"\n                  }\n                }\n              },\n              rootProps: {\n                \"data-testid\": \"3\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"text-muted\",\n            children: [/*#__PURE__*/_jsxDEV(RestoreIcon, {\n              style: {\n                marginRight: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), \"Updated 3 mins ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/kloudone training/React UI Task/src/components/dashboard.js"],"names":["React","Chart","Card","ListGroup","AccessTimeIcon","RestoreIcon","Dashboard","allowHtml","title","padding","margin","marginRight","hAxis","vAxis","series","curveType"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className=\"dash-container\">\r\n      <div className=\"dash-title\">\r\n        <h1>Dashboard</h1>\r\n      </div>\r\n      <div className=\"dash-content\">\r\n        <div className=\"piech\">\r\n          <Card className=\"dash-card-1\">\r\n            <Card.Header>\r\n              <Card.Title>Email statistics</Card.Title>\r\n              <Card.Subtitle className=\"text-muted\">\r\n                Last Campaign Performance\r\n              </Card.Subtitle>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item className=\"chart-padding\">\r\n                <Chart\r\n                  width={\"500px\"}\r\n                  height={\"250px\"}\r\n                  chartType=\"PieChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                    [\"Task\", \"Hours per Day\"],\r\n                    [\"Open\", 3],\r\n                    [\"Bounce\", 1.5],\r\n                    [\"Unsubscribe\", 3],\r\n                  ]}\r\n                  options={{\r\n                    allowHtml: \"true\",\r\n                    title: \"\",\r\n                    /*width: \"100%\",\r\n                    height: \"100%\",*/\r\n                    padding: \"0px\",\r\n                    margin: \"0px\",\r\n                  }}\r\n                  rootProps={{ \"data-testid\": \"1\" }}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <AccessTimeIcon style={{ marginRight: \"10px\" }} />\r\n                Campaign sent 2 days ago\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n        <div className=\"linegph\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title>User Behaviour</Card.Title>\r\n              <Card.Subtitle className=\"text-muted\">\r\n                24 Hours Performance\r\n              </Card.Subtitle>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Chart\r\n                width={\"600px\"}\r\n                height={\"280px\"}\r\n                chartType=\"LineChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                  [\"Time\", \"Open\", \"Click\",'Click Second Time'],\r\n                  [0, 0, 0, 0],\r\n                  [1, 100, 180, 130 ],\r\n                  [2, 200, 150, 195],\r\n                  [3, 170, 300, 200 ],\r\n                  [4, 180, 150, 130],\r\n                  [5, 280, 323, 350],\r\n                  [6, 110, 301, 275],\r\n                  [7, 270, 190, 230],\r\n                ]}\r\n                options={{\r\n                  hAxis: {\r\n                    title: \"\",\r\n                  },\r\n                  vAxis: {\r\n                    title: \"\",\r\n                  },\r\n                  series: {\r\n                    0: { curveType: \"function\" },\r\n                    1: { curveType: \"function\" },\r\n                    2: { curveType: \"function\" },\r\n                  },\r\n                }}\r\n                rootProps={{ \"data-testid\": \"3\" }}\r\n              />\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">\r\n              <RestoreIcon style={{ marginRight: \"10px\" }} />\r\n              Updated 3 mins ago\r\n            </Card.Footer>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}