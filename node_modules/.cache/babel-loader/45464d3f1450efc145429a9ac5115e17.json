{"ast":null,"code":"import React from\"react\";import Chart from\"react-google-charts\";import{Card,ListGroup}from\"react-bootstrap\";import AccessTimeIcon from\"@material-ui/icons/AccessTime\";import RestoreIcon from\"@material-ui/icons/Restore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(){return/*#__PURE__*/_jsxs(\"div\",{className:\"dash-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dash-title\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Dashboard\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dash-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"piech\",children:/*#__PURE__*/_jsxs(Card,{className:\"dash-card-1\",children:[/*#__PURE__*/_jsxs(Card.Header,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Email statistics\"}),/*#__PURE__*/_jsx(Card.Subtitle,{className:\"text-muted\",children:\"Last Campaign Performance\"})]}),/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{className:\"chart-padding\",children:/*#__PURE__*/_jsx(Chart,{width:\"500px\",height:\"250px\",chartType:\"PieChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Loading Chart\"}),data:[[\"Task\",\"Hours per Day\"],[\"Open\",3],[\"Bounce\",1.5],[\"Unsubscribe\",3]],options:{allowHtml:\"true\",title:\"\",/*width: \"100%\",\r\n                    height: \"100%\",*/padding:\"0px\",margin:\"0px\"},rootProps:{\"data-testid\":\"1\"}})}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(AccessTimeIcon,{style:{marginRight:\"10px\"}}),\"Campaign sent 2 days ago\"]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"linegph\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Card.Header,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"User Behaviour\"}),/*#__PURE__*/_jsx(Card.Subtitle,{className:\"text-muted\",children:\"24 Hours Performance\"})]}),/*#__PURE__*/_jsx(Card.Body,{className:\"line-graph-padding\",children:/*#__PURE__*/_jsx(Chart,{width:\"600px\",height:\"280px\",chartType:\"LineChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Loading Chart\"}),data:[[\"Time\",\"Open\",\"Click\",'Click Second Time'],[0,0,0,0],[1,100,180,130],[2,200,150,115],[3,170,300,200],[4,180,150,130],[5,280,323,350],[6,110,301,275],[7,270,190,230]],options:{hAxis:{title:\"\"},vAxis:{title:\"\"},series:{0:{curveType:\"function\"},1:{curveType:\"function\"},2:{curveType:\"function\"}}},rootProps:{\"data-testid\":\"3\"}})}),/*#__PURE__*/_jsxs(Card.Footer,{children:[/*#__PURE__*/_jsx(RestoreIcon,{style:{marginRight:\"10px\"}}),\"Updated 3 mins ago\"]})]})})]})]});};export default Dashboard;","map":{"version":3,"sources":["D:/kloudone training/React UI Task/src/components/dashboard.js"],"names":["React","Chart","Card","ListGroup","AccessTimeIcon","RestoreIcon","Dashboard","allowHtml","title","padding","margin","marginRight","hAxis","vAxis","series","curveType"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport RestoreIcon from \"@material-ui/icons/Restore\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className=\"dash-container\">\r\n      <div className=\"dash-title\">\r\n        <h1>Dashboard</h1>\r\n      </div>\r\n      <div className=\"dash-content\">\r\n        <div className=\"piech\">\r\n          <Card className=\"dash-card-1\">\r\n            <Card.Header>\r\n              <Card.Title>Email statistics</Card.Title>\r\n              <Card.Subtitle className=\"text-muted\">\r\n                Last Campaign Performance\r\n              </Card.Subtitle>\r\n            </Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item className=\"chart-padding\">\r\n                <Chart\r\n                  width={\"500px\"}\r\n                  height={\"250px\"}\r\n                  chartType=\"PieChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                    [\"Task\", \"Hours per Day\"],\r\n                    [\"Open\", 3],\r\n                    [\"Bounce\", 1.5],\r\n                    [\"Unsubscribe\", 3],\r\n                  ]}\r\n                  options={{\r\n                    allowHtml: \"true\",\r\n                    title: \"\",\r\n                    /*width: \"100%\",\r\n                    height: \"100%\",*/\r\n                    padding: \"0px\",\r\n                    margin: \"0px\",\r\n                  }}\r\n                  rootProps={{ \"data-testid\": \"1\" }}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <AccessTimeIcon style={{ marginRight: \"10px\" }} />\r\n                Campaign sent 2 days ago\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n        <div className=\"linegph\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Card.Title>User Behaviour</Card.Title>\r\n              <Card.Subtitle className=\"text-muted\">\r\n                24 Hours Performance\r\n              </Card.Subtitle>\r\n            </Card.Header>\r\n            <Card.Body className='line-graph-padding'>\r\n              <Chart\r\n                width={\"600px\"}\r\n                height={\"280px\"}\r\n                chartType=\"LineChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                  [\"Time\", \"Open\", \"Click\",'Click Second Time'],\r\n                  [0, 0, 0, 0],\r\n                  [1, 100, 180, 130 ],\r\n                  [2, 200, 150, 115],\r\n                  [3, 170, 300, 200 ],\r\n                  [4, 180, 150, 130],\r\n                  [5, 280, 323, 350],\r\n                  [6, 110, 301, 275],\r\n                  [7, 270, 190, 230],\r\n                ]}\r\n                options={{\r\n                  hAxis: {\r\n                    title: \"\",\r\n                  },\r\n                  vAxis: {\r\n                    title: \"\",\r\n                  },\r\n                  series: {\r\n                    0: { curveType: \"function\" },\r\n                    1: { curveType: \"function\" },\r\n                    2: { curveType: \"function\" },\r\n                  },\r\n                }}\r\n                rootProps={{ \"data-testid\": \"3\" }}\r\n              />\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <RestoreIcon style={{ marginRight: \"10px\" }} />\r\n              Updated 3 mins ago\r\n            </Card.Footer>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}